#include "temperature_cli.h"
#include <stdint.h>
#include "print_cli.h"
#include <stdlib.h>
#include "task_config_type.h"
#include "cli_type.h"

extern TaskConfig task1_parameter;
extern TaskConfig task2_parameter;
extern TaskConfig task3_parameter;
extern TaskConfig task4_parameter;

extern cli_command_t list_command[];

void getTemp(char **argv,uint8_t argv_num)
{
  print_cli("nhiet do la : %d\n",35);
}
void setTempMax(char **argv,uint8_t argv_num)
{
	if(argv_num != 3 ){
	  print_cli("command error");
		return ;
	}
	uint8_t channel = atoi(argv[1]);
	uint8_t temp = atoi(argv[2]);
	if(channel > 5){
	  print_cli("channel error");
		return ;
	}
	if(temp>100){
	  print_cli("temp error");
		return ;
	}
  print_cli("lenh cai dat nhiet do max channel %d ,temp %d\n");
}
void setTempMin(char **argv,uint8_t argv_num)
{
	if(argv_num != 3 ){
	  print_cli("command error");
		return ;
	}
	uint8_t channel = atoi(argv[1]);
	uint8_t temp = atoi(argv[2]);
	if(channel > 5){
	  print_cli("channel error");
		return ;
	}
	if(temp>100){
	  print_cli("temp error");
		return ;
	}
  print_cli("lenh cai dat nhiet do min channel\n");
}
void update_task1(char **argv,uint8_t argv_num){

}

void update_task2(char **argv,uint8_t argv_num){

}
void update_task3(char **argv,uint8_t argv_num){

}
void update_task4(char **argv,uint8_t argv_num){

}
void data_frame(char **argv,uint8_t argv_num){
	print_cli("task-id | perious | execution | deadline | priority | global-cycle");
}

void help(char **argv,uint8_t argv_num){
	uint8_t i = 0;
	while(list_command[i].help != NULL){
		print_cli("%s \n",list_command[i].help);
		i++;
	}
}
